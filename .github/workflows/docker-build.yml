name: Rebuild Docker Image

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      BASE_IMAGE: alpine:latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull base image
      run: docker pull ${{ env.BASE_IMAGE }}

    - name: Check for base image updates
      id: check_image
      run: |
        BASE_IMAGE="${{ env.BASE_IMAGE }}"
        CURRENT_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $BASE_IMAGE)
        CURRENT_DIGEST=${CURRENT_DIGEST#*@}
        REMOTE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $BASE_IMAGE | docker run --rm -i busybox sh -c "grep -o 'sha256:[a-f0-9]*' | awk '/sha256:[a-f0-9]{64}/ {print \$0}'")
        echo "current_digest=$CURRENT_DIGEST" >> $GITHUB_ENV
        echo "remote_digest=$REMOTE_DIGEST" >> $GITHUB_ENV
        if [ "$CURRENT_DIGEST" != "$REMOTE_DIGEST" ]; then
          echo "update_needed=true" >> $GITHUB_OUTPUT
        else
          echo "update_needed=false" >> $GITHUB_OUTPUT
        fi

    - name: Install and run make
      if: steps.check_image.outputs.update_needed == 'true'
      run: |
        sudo apt-get update && sudo apt-get install -y make
        make all
